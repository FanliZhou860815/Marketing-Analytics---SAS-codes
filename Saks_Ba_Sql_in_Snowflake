SET PAGE_VIEWS = (SELECT VALUE FROM MARKETINGANALYTICS_DEV.SOURCE.SAKS_MKTG_CONFIG_TABLE WHERE KEY = 'PAGE_VIEWS');
SET BI_PRODUCT = (SELECT VALUE FROM MARKETINGANALYTICS_DEV.SOURCE.SAKS_MKTG_CONFIG_TABLE WHERE KEY='BI_PRODUCT');
SET VISITOR_DEVICES=(SELECT VALUE FROM MARKETINGANALYTICS_DEV.SOURCE.SAKS_MKTG_CONFIG_TABLE WHERE KEY='VISITOR_DEVICES');
SET EVENTS=(SELECT VALUE FROM MARKETINGANALYTICS_DEV.SOURCE.SAKS_MKTG_CONFIG_TABLE WHERE KEY='EVENTS');

--web ba file
TRUNCATE TABLE MARKETINGANALYTICS_DEV.INTERMEDIATE.SAKS_XDB_BA_DAILY_FILE_WEB;

INSERT INTO
	MARKETINGANALYTICS_DEV.INTERMEDIATE.SAKS_XDB_BA_DAILY_FILE_WEB
-- 	AS 
SELECT
	'WEB' AS CHANNEL,
	PAGE.*,
	HIST.HIST_SEC_ON_PAGE,
	HIST.HIST_PAGE_VIEWS,
	HIST.HIST_LAST_VIEW_DT,
	EVENT_5,
	EVENT_6,
	EVENT_12,
	EVENT_17,
	EVENT_34,
	ORD.PURCHASED_FLAG
FROM
	(
		SELECT
			UUID.EMAIL,
			VIEWS.PRODUCT_CODE,
			VIEWS.DATE_FILTER,
			MAX(VIEWS.product_finding_methods) as product_finding_methods,
			MAX(VIEWS.marketing_channel) AS marketing_channel,
			SUM(VIEWS.SEC_ON_PAGE) AS SEC_ON_PAGE,
			SUM(VIEWS.PAGE_VIEWS) AS PAGE_VIEWS
		FROM
			(
				SELECT
					VISITOR_DEVICE_UUID,
					product_code,
					DATE_FILTER,
					MAX(product_finding_methods) as product_finding_methods,
					MAX(marketing_channel) AS marketing_channel,
					SUM(sec_on_page) AS SEC_ON_PAGE,
					COUNT(page_view_uuid) AS PAGE_VIEWS
				FROM
					TABLE($PAGE_VIEWS)
				WHERE
					DATE_FILTER = CURRENT_DATE - 1
					AND LOWER(page_type) IN (
						'product detail',
						'quick look',
						'quicklook',
						'productdetail'
					)
				GROUP BY
					VISITOR_DEVICE_UUID,
					product_code,
					DATE_FILTER
			) VIEWS
			INNER JOIN (
				SELECT
					DISTINCT VISITOR_DEVICE_UUID,
					VISITOR_UUID,
					EMAIL,
					APP_CHANNEL_ID
				FROM
					TABLE($VISITOR_DEVICES)
				WHERE
					TRIM(EMAIL) IS NOT NULL
					AND SOURCE = 'saks'
			) AS UUID ON VIEWS.VISITOR_DEVICE_UUID = UUID.VISITOR_DEVICE_UUID
		GROUP BY
			UUID.EMAIL,
			VIEWS.PRODUCT_CODE,
			VIEWS.DATE_FILTER
	) AS PAGE
	LEFT JOIN (
		SELECT
			UUID.EMAIL,
			VIEWS.PRODUCT_CODE,
			VIEWS.DATE_FILTER,
			SUM(SEC_ON_PAGE) AS HIST_SEC_ON_PAGE,
			SUM(PAGE_VIEWS) AS HIST_PAGE_VIEWS,
			MAX(LAST_VIEW_DT) AS HIST_LAST_VIEW_DT
		FROM
			(
				SELECT
					BA.VISITOR_DEVICE_UUID,
					BA.DATE_FILTER,
					BA.product_code,
					SUM(sec_on_page) AS SEC_ON_PAGE,
					COUNT(page_view_uuid) AS PAGE_VIEWS,
					MAX(PV.DATE_FILTER) AS LAST_VIEW_DT
				FROM
					TABLE($PAGE_VIEWS) PV
					INNER JOIN (
						SELECT
							distinct VISITOR_DEVICE_UUID,
							PRODUCT_CODE,
							DATE_FILTER
						FROM
							TABLE($PAGE_VIEWS)
						WHERE
							DATE_FILTER = CURRENT_DATE - 1
							AND LOWER(page_type) IN (
								'product detail',
								'quick look',
								'quicklook',
								'productdetail'
							)
					) BA ON PV.VISITOR_DEVICE_UUID = BA.VISITOR_DEVICE_UUID
					AND PV.product_code = BA.product_code
					AND PV.DATE_FILTER < BA.DATE_FILTER
				WHERE
					LOWER(page_type) IN (
						'product detail',
						'quick look',
						'quicklook',
						'productdetail'
					)
				GROUP BY
					BA.VISITOR_DEVICE_UUID,
					BA.DATE_FILTER,
					BA.product_code
			) as VIEWS
			INNER JOIN (
				SELECT
					DISTINCT VISITOR_DEVICE_UUID,
					VISITOR_UUID,
					EMAIL
				FROM
					TABLE($VISITOR_DEVICES)
				WHERE
					TRIM(EMAIL) IS NOT NULL
					AND SOURCE = 'saks'
			) AS UUID ON VIEWS.VISITOR_DEVICE_UUID = UUID.VISITOR_DEVICE_UUID
		GROUP BY
			UUID.EMAIL,
			VIEWS.PRODUCT_CODE,
			VIEWS.DATE_FILTER
	) HIST ON PAGE.EMAIL = HIST.EMAIL
	AND PAGE.PRODUCT_CODE = HIST.PRODUCT_CODE
	AND PAGE.DATE_FILTER = HIST.DATE_FILTER
	LEFT JOIN (
		select
			*
		from
			(
				SELECT
					UUID.EMAIL,
					PRODUCT_CODE,
					DATE_FILTER,
					EVENT_TYPE_ID_C,
					SUM(EVENTS_CNTS) AS EVENTS_CNTS
				FROM
					(
						select
							VISITOR_DEVICE_UUID,
							PRODUCT_CODE,
							DATE_FILTER,
							CONCAT('EVENT_' || EVENT_TYPE_ID) AS EVENT_TYPE_ID_C,
							COUNT(DISTINCT EVENT_UUID) AS EVENTS_CNTS
						from
							TABLE($EVENTS) events
						where
							DATE_FILTER = CURRENT_DATE - 1
							AND PRODUCT_CODE IS NOT NULL
							AND EVENT_TYPE_ID IN (5, 6, 12, 17, 34)
						group by
							VISITOR_DEVICE_UUID,
							PRODUCT_CODE,
							DATE_FILTER,
							EVENT_TYPE_ID_C
					) EVENTS
					INNER JOIN (
						SELECT
							DISTINCT VISITOR_DEVICE_UUID,
							VISITOR_UUID,
							EMAIL
						FROM
							TABLE($VISITOR_DEVICES)
						WHERE
							TRIM(EMAIL) IS NOT NULL
							AND SOURCE = 'saks'
					) AS UUID ON EVENTS.VISITOR_DEVICE_UUID = UUID.VISITOR_DEVICE_UUID
				GROUP BY
					UUID.EMAIL,
					PRODUCT_CODE,
					DATE_FILTER,
					EVENT_TYPE_ID_C
			) pivot(
				sum(EVENTS_CNTS) for event_type_id_c in (
					'EVENT_5',
					'EVENT_6',
					'EVENT_12',
					'EVENT_17',
					'EVENT_34'
				)
			) as p (
				EMAIL,
				PRODUCT_CODE,
				DATE_FILTER,
				EVENT_5,
				EVENT_6,
				EVENT_12,
				EVENT_17,
				EVENT_34
			)
		order by
			email DESC,
			PRODUCT_CODE,
			DATE_FILTER
	) EVENTS ON PAGE.EMAIL = EVENTS.EMAIL
	AND PAGE.PRODUCT_CODE = EVENTS.PRODUCT_CODE
	AND PAGE.DATE_FILTER = EVENTS.DATE_FILTER
	LEFT JOIN (
		SELECT
			EMAIL,
			ORDER_NUMBER,
			DATE_FILTER,
			PRODUCT_CODE,
			1 AS PURCHASED_FLAG
		FROM
			(
				SELECT
					DISTINCT VISITOR_DEVICE_UUID,
					CAST(VALUE1 AS INTEGER) AS ORDER_NUMBER,
					DATE_FILTER
				FROM
					TABLE($EVENTS) events
				where
					DATE_FILTER = CURRENT_DATE - 1
					AND EVENT_TYPE_ID = 9
					AND VALUE1 IS NOT NULL
			) AS CT
			INNER JOIN (
				SELECT
					DISTINCT VISITOR_DEVICE_UUID,
					VISITOR_UUID,
					EMAIL
				FROM
					TABLE($VISITOR_DEVICES)
				WHERE
					TRIM(EMAIL) IS NOT NULL
					AND SOURCE = 'saks'
			) AS UUID ON CT.VISITOR_DEVICE_UUID = UUID.VISITOR_DEVICE_UUID
			INNER JOIN (
				SELECT
					DISTINCT ORDERNUM,
					PRODUCT_CODE
				FROM
					ASTER.REPLICATOR.hbc_dw_mrep_bi_sale AS SL
					INNER JOIN (
						select
							distinct product_code,
							item
						from
							TABLE($BI_PRODUCT)
					) AS PRD ON SL.ITEM = PRD.item
				WHERE
					orderdate >= CURRENT_DATE -181
			) MREP ON CT.ORDER_NUMBER = MREP.ORDERNUM
	) AS ORD ON PAGE.EMAIL = ORD.EMAIL
	AND PAGE.DATE_FILTER = ORD.DATE_FILTER
	AND PAGE.PRODUCT_CODE = ORD.PRODUCT_CODE;
